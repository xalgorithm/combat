<?php
/**
 * @file
 * Install, update and uninstall functions for the standard installation profile.
 */


/**
 * Implements hook_install_tasks().
 */
function slac_misc_install_tasks($install_state) {
  $tasks = array();
  $tasks['slac_misc_install_task_demo_content'] = array(
    'display_name' => st('Install demo content'),
    'display' => TRUE,
    'type' => 'batch',
  );

  return $tasks;
}

function slac_misc_install_task_demo_content() {
  $demo_modules = module_invoke_all('demo_modules');
  $modules = array_merge(
    array(
      'slac_admin_modules',
      'slac_misc_frontpage',
      'slac_site_404',
      'slac_misc_permissions',
      'slac_demo_main_menu',
      'slac_demo_basic_page',
      'slac_feedback_webform',
    ),
    $demo_modules
  );

  // Resolve the dependencies now, so that module_enable() doesn't need
  // to do it later for each individual module (which kills performance).
  $files = system_rebuild_module_data();
  $modules_sorted = array();
  foreach ($modules as $module) {
    if ($files[$module]->requires) {
      // Create a list of dependencies that haven't been installed yet.
      $dependencies = array_keys($files[$module]->requires);
      $dependencies = array_filter($dependencies, '_slac_misc_filter_dependencies');
      // Add them to the module list.
      $modules = array_merge($modules, $dependencies);
    }
  }
  $modules = array_unique($modules);
  foreach ($modules as $module) {
    $modules_sorted[$module] = $files[$module]->sort;
  }
  arsort($modules_sorted);

  $operations = array();

  foreach ($modules_sorted as $module => $weight) {
    $operations[] = array('_slac_misc_enable_module', array($module, $files[$module]->info['name']));
  }
  $operations[] = array('_slac_misc_flush_caches', array(t('Flushed caches.')));

  $batch = array(
    'title' => t('Installing demo content and other modules. This can take a few minutes.'),
    'operations' => $operations,
  );
  return $batch;
}

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function slac_misc_install() {
  $file = DRUPAL_ROOT . '/profiles/slac_profiles_shared.inc';
  require_once $file;

  variable_set('install_profile', 'slac_misc');

  slac_profiles_shared_filtered_format();

  // Create a Test authenticated user
  $account = new stdClass();
  $account->is_new = TRUE;
  $edit = array(
    'name' => 'auth_user',
    'mail' => 'test_user@slac.stanford.edu',
    'pass' => 'sl@ckers',
    'status' => 1,
    'roles' => array(
      2 => TRUE,
    ),
  );
  user_save($account, $edit);

  variable_set('install_profile', 'slac_misc');
  variable_set('distribution_name', 'SLAC Projects');

  variable_set('site_name', 'SLAC Projects');
  variable_set('site_name_abbreviation', 'Misc');
  variable_set('site_url_address', '2575 Sand Hill Road, Menlo Park, CA 94025');

  slac_profiles_shared_place_system_blocks_to_regions();

  // Enable the slac theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', 'slac')
    ->execute();
}

function _slac_misc_filter_dependencies($dependency) {
  return !module_exists($dependency);
}

function _slac_misc_enable_module($module, $module_name, &$context) {
  module_enable(array($module), FALSE);
  $context['message'] = st('Installed %module module.', array('%module' => $module_name));
}

function _slac_misc_flush_caches($operation, &$context) {
  $context['message'] = t('@operation', array('@operation' => $operation));
  drupal_flush_all_caches();
}
